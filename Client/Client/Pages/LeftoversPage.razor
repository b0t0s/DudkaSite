@page "/Leftovers"
@using Site.Shared.Dto
@using Site.Client.Infrastructure
@inject HttpClient Http

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <h1 class="text-center mb-4">Leftovers Table</h1>
            <button class="btn btn-primary btn-lg btn-block" title="Load Leftovers table" @onclick="GetTableData">Load Leftovers Table</button>
        </div>
    </div>

    @if (TableData != null)
    {
        <div class="row mt-4">
            <div class="col-md-10 offset-md-1">
                <LeftoversTableWidget Title="Products Table" TableData="@TableData"/>
            </div>
        </div>
    }
</div>

@code
{
    private List<Leftovers> TableData { get; set; } = new();

    [Inject]
    private SiteApiClient ApiClient { get; set; }

    public async Task GetTableData()
    {
        try
        {
            var response = await Http.GetFromJsonAsync<List<Leftovers>>("Leftovers");

            if (response != null)
            {
                TableData = response.OrderBy(x => x.ItemsLeft).ToList();
            }
            else
            {
                Console.WriteLine("Failed to fetch data. No data available");
            }
        }
        catch (HttpRequestException e)
        {
            Console.WriteLine($"HttpRequestException: {e.Message}");
        }
    }
}